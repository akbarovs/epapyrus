// Generated by CoffeeScript 1.6.2
(function() {
  var EndEvent, Scene, Shape, StartEvent, XYPoint, loadPaper,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  loadPaper = function() {
    var canvas;

    canvas = document.createElement('canvas');
    document.body.appendChild(canvas);
    paper.setup(canvas);
    return window.$p = paper;
  };

  $(function() {
    var a, b, scene;

    loadPaper();
    a = new StartEvent("test", {
      x: 100,
      y: 100
    });
    b = new EndEvent("test2", {
      x: 200,
      y: 100
    });
    a.to(b);
    scene = new Scene;
    scene.add(a);
    scene.add(b);
    scene.draw();
    return $p.view.draw();
  });

  XYPoint = (function() {
    function XYPoint(x, y) {
      this.x = x;
      this.y = y;
    }

    return XYPoint;

  })();

  Scene = (function() {
    function Scene(objects) {
      this.objects = objects != null ? objects : [];
    }

    Scene.prototype.add = function(object) {
      return this.objects.push(object);
    };

    Scene.prototype.draw = function() {
      var object, _i, _len, _ref, _results;

      console.log(JSON.stringify(this.objects));
      _ref = this.objects;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        object = _ref[_i];
        _results.push(object.draw());
      }
      return _results;
    };

    return Scene;

  })();

  Shape = (function() {
    Shape.prototype.type = void 0;

    Shape.prototype.size = void 0;

    Shape.prototype.outgoing = void 0;

    function Shape(id, coord, data) {
      this.id = id;
      this.coord = coord;
      this.data = data != null ? data : {};
      this.outgoing = {};
      this.size = {};
    }

    Shape.prototype.draw = function() {
      throw new Error("Unsupported");
    };

    Shape.prototype.center = function() {
      throw new Error("Unsupported");
    };

    Shape.prototype.to = function(shape) {};

    return Shape;

  })();

  StartEvent = (function(_super) {
    __extends(StartEvent, _super);

    function StartEvent(id, coord, data) {
      this.id = id;
      this.coord = coord;
      this.data = data != null ? data : {};
      StartEvent.__super__.constructor.call(this, this.id, this.coord, this.data);
      this.type = 'start-event';
      this.size.r = 15;
    }

    StartEvent.prototype.draw = function() {
      var path;

      path = new $p.Path.Circle(new $p.Point(this.coord.x, this.coord.y), this.size.r);
      return path.fillColor = 'black';
    };

    return StartEvent;

  })(Shape);

  EndEvent = (function(_super) {
    __extends(EndEvent, _super);

    function EndEvent(id, coord, data) {
      this.id = id;
      this.coord = coord;
      this.data = data != null ? data : {};
      EndEvent.__super__.constructor.call(this, this.id, this.coord, this.data);
      this.type = 'end-event';
      this.size.r = 15;
    }

    EndEvent.prototype.draw = function() {
      var path;

      path = new $p.Path.Circle(new $p.Point(this.coord.x, this.coord.y), this.size.r);
      path.fillColor = 'white';
      return path.strokeColor = 'black';
    };

    return EndEvent;

  })(Shape);

}).call(this);
